services:

  php84:
    build:
      context: ./php
      args:
        PHP_VERSION: 8.4
    container_name: php-fpm84
    restart: unless-stopped
    volumes:
      - ./nginx/phpinfo:/var/www/phpinfo
      - ${SITES_FOLDER}:/var/www/html  # Montre tes sous-dossiers ici
    networks:
      - web

  php82:
    build:
      context: ./php
      args:
        PHP_VERSION: 8.2
    container_name: php-fpm82
    restart: unless-stopped
    volumes:
      - ./nginx/phpinfo:/var/www/phpinfo
      - ${SITES_FOLDER}:/var/www/html  # Montre tes sous-dossiers ici
    networks:
      - web

  php74:
    build:
      context: ./php
      args:
        PHP_VERSION: 7.4
    container_name: php-fpm74
    restart: unless-stopped
    volumes:
      - ./nginx/phpinfo:/var/www/phpinfo
      - ${SITES_FOLDER}:/var/www/html  # Montre tes sous-dossiers ici
    networks:
      - web

  php56:
    build:
      context: ./php
      args:
        PHP_VERSION: 5.6
    container_name: php-fpm56
    restart: unless-stopped
    volumes:
      - ./nginx/phpinfo:/var/www/phpinfo
      - ${SITES_FOLDER}:/var/www/html  # Montre tes sous-dossiers ici
    networks:
      - web


  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      # - "80:80"      # HTTP
      - "443:443"
      # - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Map the dynamic conf into the container
      - ./traefik/:/etc/traefik/
      # On map les certificats dans le conteneur
      - ./certs:/etc/certs:ro

    networks:
      - web


  traefik-dashboard:
    build:
      context: ./traefik-dashboard  # Où tu as mis le Dockerfile et le code Node.js
    container_name: traefik-dashboard
    restart: unless-stopped
    depends_on:
      - traefik
    command:
      - "--server.graceTimeout=0s"
    env_file:
      - .env
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default-site.conf:/etc/nginx/default-site.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${SITES_FOLDER}:/var/www/sites  # Même volume partagé avec PHP
      - ./traefik-dashboard/server.js:/usr/src/app/server.js  # Monter le fichier server.js
      - ./traefik-dashboard/views:/usr/src/app/views  # Monter le dossier views
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.entrypoints=https" # Accès via HTTPS
      - "traefik.http.routers.traefik-dashboard.rule=Host(`localhost`)"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=3000"
    networks:
      - web



  ## Serveurs NGINX & PHP 

  nginx:
    image: nginx:latest
    depends_on:
      - traefik-dashboard
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default-site.conf:/etc/nginx/default-site.conf
      - ./nginx/default-server.conf:/etc/nginx/default-server.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/phpinfo:/var/www/phpinfo
      - ${SITES_FOLDER}:/var/www/html  # Même volume partagé avec PHP
    # ports:
    #   - "8080:80"      # HTTP
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=HostRegexp(`(?i)^[a-z0-9-]+\\.${NGINX_DOMAIN}[0-9]{0,3}\\.localhost$`) || HostRegexp(`(?i)^[a-z0-9-]+\\.[a-z0-9-]+\\.${NGINX_DOMAIN}[0-9]{0,3}\\.localhost$`)"
      - "traefik.http.routers.nginx.entrypoints=http,https"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    networks:
      - web




  # Serveur BDD
  mysql:
    image: mariadb:latest
    container_name: mysql
    volumes:
      - db-traefik-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - 33065:3306
    restart: unless-stopped
    networks:
      - web

  ## Serveur Adminer
  adminer:
    depends_on:
      - mysql
      - traefik
    image: adminer
    container_name: adminer
    restart: unless-stopped
    labels:
      # Enable this container to be mapped by traefik
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
      - "traefik.enable=true"
      # If port is different than 80, use the following service:
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.http.routers.adminer.entrypoints=https" # Accès via HTTPS
      # URL to reach this container
      - "traefik.http.routers.adminer.rule=Host(`adminer.${DEV_DOMAIN}.localhost`)"
      - "traefik.http.routers.adminer.tls=true"
    networks:
      - web
    volumes:
      - ./docker/adminer/default-orange.css:/var/www/html/adminer.css
      - ./docker/adminer/logo.png:/var/www/html/logo.png
      - ./docker/adminer/fonts/:/var/www/html/fonts


  # Serveur phpmyadmin

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
        MYSQL_ROOT_PASSWORD: password
        PMA_HOST: mysql
        UPLOAD_LIMIT: 128M
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.phpmyadmin.rule=Host(`pma.${DEV_DOMAIN}.localhost`)"
        - "traefik.http.routers.phpmyadmin.entrypoints=https"
        - "traefik.http.routers.phpmyadmin.tls=true"
    restart: always
    volumes:
        - /sessions
    networks:
        - web


  # Serveur pour les mails de développement
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - 25:25
    networks:
      - web
    user: root
    labels:
      - traefik.enable=true
      - traefik.http.services.mailhog.loadbalancer.server.port=8025
      - traefik.http.routers.mailhog.entrypoints=https
      - "traefik.http.routers.mailhog.rule=Host(`mailhog.${DEV_DOMAIN}.localhost`)"
      - "traefik.http.routers.mailhog.tls=true"



  whoami:
    image: containous/whoami
    container_name: whoami
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      # URL pour accéder à ce conteneur
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DEV_DOMAIN}.localhost`)"
      # Activation de TLS
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.entrypoints=https"
      # Si le port est différent de 80, utilisez le service suivant:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
    networks:
    - web

      


volumes:
  db-traefik-data:

networks:
  web:
    external: true
